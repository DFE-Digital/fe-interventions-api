trigger:
  batch: true
  branches:
    include:
      - "*"

jobs:
- job: API
  workspace:
    clean: all
  variables:
    buildConfiguration: 'Release'
    buildPlatform: 'Any CPU'
  steps:
    - task: NuGetCommand@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
  
    - task: DotNetCoreCLI@2
      displayName: 'Build code'
      inputs:
        projects: 'src/**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'
  
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: 'src/**/*.*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build'
  
    - task: DotNetCoreCLI@2
      displayName: 'Publish Web app'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/Dfe.FE.Interventions.Api/Dfe.FE.Interventions.Api.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.StagingDirectory)/publish/Dfe.FE.Interventions.Api.$(Build.BuildId) --no-restore --no-build'
        zipAfterPublish: false
        modifyOutputPath: false
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish Ukrlp Consumer'
      inputs:
        command: publish
        publishWebProjects: false
        projects: 'src/Dfe.FE.Interventions.Consumer.Ukrlp/Dfe.FE.Interventions.Consumer.Ukrlp.csproj'
        arguments: '--configuration $(buildConfiguration) --self-contained --output $(Build.StagingDirectory)/publish/Dfe.FE.Interventions.Api.$(Build.BuildId)/App_Data/jobs/continuous/UkrlpConsumer --no-restore --no-build'
        zipAfterPublish: false
        modifyOutputPath: false

    - task: ArchiveFiles@2
      displayName: 'Zip App'
      inputs:
        rootFolderOrFile: '$(Build.StagingDirectory)/publish/Dfe.FE.Interventions.Api.$(Build.BuildId)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Dfe.FE.Interventions.Api.$(Build.BuildId).zip'
        replaceExistingArchive: true
  
    - task: PublishBuildArtifacts@1
      displayName: 'Publish API Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        
- job: Database
  workspace:
    clean: all
  variables:
    buildConfiguration: 'Release'
    buildPlatform: 'Any CPU'
  pool: 'Hosted VS2017'
  steps:
    - task: VSBuild@1
      displayName: 'Publish DACPAC'
      inputs:
        solution: 'src/Dfe.FE.Interventions.Database/Dfe.FE.Interventions.Database.sqlproj'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'src/Dfe.FE.Interventions.Database/bin/Output'
        Contents: '*.dacpac'
        TargetFolder: '$(build.artifactstagingdirectory)/Dfe.FE.Interventions.Database.$(Build.BuildId)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Database Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/Dfe.FE.Interventions.Database.$(Build.BuildId)'

- job: Templates
  steps:
    - task: CopyFiles@2
      displayName: 'Copy azure templates'
      inputs:
        SourceFolder: 'azure'
        TargetFolder: '$(build.artifactstagingdirectory)/templates/azure'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Templates Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/templates'